name: Auto build Docker image
on:
  issue_comment:
    types:
      - created
jobs:
  resolve-issue-var:
    if: startswith(github.event.comment.body, '/imagebuild_dockerimages')
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.set-appversion.outputs.app }}
      version: ${{ steps.set-appversion.outputs.version }}
    steps:
      - name: Write vars
        id: set-appversion
        run: |
          commentbody="${{github.event.comment.body}}"
          app=`echo "$commentbody"| awk '{print $2}'`
          version=`echo "$commentbody"| awk '{print $3}'`
          echo "::set-output name=app::$app"
          echo "::set-output name=version::$version"
  build_apps:
    name: Auto build app image
    needs:
      - resolve-issue-var
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64,arm64 ]
    permissions:
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download buildah and sealos
        run: .github/scripts/download/download.sh
      - name: Build Image
        env:
          registry: docker.io
          username: ${{ github.repository_owner }}
          repo: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY }}
          app: ${{ needs.resolve-issue-var.outputs.app }}
          version: ${{ needs.resolve-issue-var.outputs.version }}
          arch: ${{ matrix.arch }}
        run: .github/scripts/dockers.sh

  build_manifest:
    needs:
      - resolve-issue-var
      - build_apps
    name: Auto manifest app image
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download buildah and sealos
        run: .github/scripts/download/download.sh
      - name: Manifest Image
        env:
          registry: docker.io
          username: ${{ github.repository_owner }}
          repo: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY }}
          app: docker-${{ needs.resolve-issue-var.outputs.app }}
          version: ${{ needs.resolve-issue-var.outputs.version }}
        run: .github/scripts/manifest-other.sh

  add-tips:
    if: contains(github.event.comment.body, 'imagebuild')
    needs:
      - build_manifest
      - resolve-issue-var
    name: Auto add tips
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Success Commit
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ```
            image docker.io/${{ github.repository_owner }}/docker-${{ needs.resolve-issue-var.outputs.app }}:${{ needs.resolve-issue-var.outputs.version }} build successfully!
            ```
            
            detail log please view [autobuild-dockerfiles](https://github.com/labring/cluster-image/actions/workflows/autobuild-dockerfiles.yml)
